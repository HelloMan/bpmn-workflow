<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark"  backgroundColor="white"
		  xmlns:mx="library://ns.adobe.com/flex/mx">
	<fx:Declarations>
		<s:Move id="myMove" target="{targetView}" duration="1500" /> 
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.core.FlexGlobals;
			import mx.core.UIComponent;
			import mx.graphics.ImageSnapshot;
			private var thumbnailWidth:Number;
			private var thumbnailHeight:Number;
			private var mapWidth:Number;
			private var mapHeight:Number;
			private var windowWidth:Number;
			private var windowHeight:Number;
			
			[Bindable]
			
			public var targetView:DisplayObject;
			
			
			public function refreshThumbnail():void
			{
				thumbnailWidth = this.width;
				thumbnailHeight = this.height;
				if(thumbnail.source != null)
				{
					var matrix : Matrix = new Matrix();   
					matrix.scale(thumbnailWidth/mapWidth , thumbnailHeight/mapHeight);
					var bitmapData:BitmapData = ImageSnapshot.captureBitmapData(targetView , matrix);  
					var bitMap:Bitmap = new Bitmap(bitmapData);
					thumbnail.source = bitMap;
				}else{
					createThumbnail();
				}
				
				function createThumbnail():void
				{
					mapWidth = targetView.width;
					mapHeight = targetView.height;
					var matrix : Matrix = new Matrix();   
					matrix.scale(thumbnailWidth/mapWidth , thumbnailHeight/mapHeight);
					var bitmapData:BitmapData = ImageSnapshot.captureBitmapData(targetView , matrix);  
					var bitMap:Bitmap = new Bitmap(bitmapData);
					thumbnail.source = bitMap;
					thumbnail.width = thumbnailWidth;
					thumbnail.height = thumbnailHeight;
					//var loader:ModuleLoader = parent as ModuleLoader;
					windowWidth = FlexGlobals.topLevelApplication.width;//loader.parent.width;
					windowHeight = FlexGlobals.topLevelApplication.height;//loader.parent.height;			
					myEyes.width = thumbnailWidth*(windowWidth/mapWidth);
					myEyes.height = thumbnailHeight*(windowHeight/mapHeight);				
					var currentX:Number = targetView.x;
					var currentY:Number = targetView.y;				
					myEyes.x = 0-(currentX/mapWidth)*thumbnailWidth;
					myEyes.y = 0-(currentY/mapHeight)*thumbnailHeight;
				}
			}
			
			private function myEyesMouseDownHandler(evt:MouseEvent):void
			{
				var com:UIComponent = (evt.currentTarget as UIComponent);
				var rectangle:Rectangle = com.parent.getRect(com.parent); 
				rectangle.width = rectangle.width - (evt.currentTarget as UIComponent).width;
				rectangle.height = rectangle.height - (evt.currentTarget as UIComponent).height;
				(evt.currentTarget as UIComponent).startDrag(false,rectangle);
			}
			
			private function myEyesMouseUpHandler(evt:MouseEvent):void
			{
				(evt.currentTarget as UIComponent).stopDrag();
				var newX:Number = 0-((evt.currentTarget as UIComponent).x/thumbnailWidth)*mapWidth;
				var newY:Number = 0-((evt.currentTarget as UIComponent).y/thumbnailHeight)*mapHeight;
				this.myMove.xFrom = targetView.x;
				this.myMove.yFrom = targetView.y;
				this.myMove.xTo = newX;
				this.myMove.yTo = newY;
				this.myMove.play();
			}
		]]>
	</fx:Script>
	

	<mx:Canvas id="canvas" width="100%" height="100%" verticalScrollPolicy="off" horizontalScrollPolicy="off">	
		<mx:Image id="thumbnail" />		
		<mx:Box mouseDown="myEyesMouseDownHandler(event)" mouseUp="myEyesMouseUpHandler(event)" id="myEyes" width="100%" height="100%" backgroundColor="#ECFFBD" backgroundAlpha="0.5"/>
	</mx:Canvas>

</s:BorderContainer>
